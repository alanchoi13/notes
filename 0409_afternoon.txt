

# select
포인트는 최대값이다. 
최대 값에 +1을 해야한다. 
호출을 하게 되면 날아가기 때문에 백업을 해야한다. 

select에 대한 부분을 보게 되면 poll을 사용하는 것과 다른 점은
이벤트가 발생하였는지 확인해야한다. 
if (FD_ISSET) 을 통하여서 확인 할 수 있다. 
특정한 Descripter가 참인지 확인하는 것이다. 
accept 블록하지 않고 호출 할 수 있다.
accept 에 대한 logic을 가져다가 쓰면되는 것이고

sscok으로 오는 블럭 없이 사용이 가능하다. 
언젠간 이해야 될 것이다.

주의 사항은 nfds  최대값의 +1 이다. 비어져서 +1을 하는 것이니까 

기존의 nfds를 등록을 한다. nfds 를 다시 csock으로 업데이트를 해야한다.
기존 df를 최대값이라는 값을 가지고 있기 때문이다. 

등록을 하였다. 
nfds에 대해서 등록이 될 것이고 무엇도 체크가 가능하나면 
fd가 4번부터 존재하기 때문에 
for ( i = 4; i < nfds + 1; ++i ) {
	if (FD_ISSET(fd, &readfds))) {
		//csock으로 보는 것보다 fd로 보는 것이 좋다. 
		//csock이 하나가 아니기 때문에 여러개로 돌아주어야 한다. 
		ret = read(fd, buf, sizeof buf);
		if (ret <= 0) {
		//ret가 0보다 같거나 크다면 
			FD_CLR(fd, &fds);//해당하는 fd에서 제거를 한다. 
			구하기가 너무 어렵기 떄문에 그냥 사용하게 된다. 
			1024개 배열 중에서 헛 루프를 많이 돌게 된다.
			최대값을 직접 관리 해야한다. 
			빼지는 않겠지만 조정하는 것이 좋다.
			
		} else if (ret == -1) {

		}
		write(fd, buf, ret);
	}	
}


